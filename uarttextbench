`timescale 1ns / 1ps

module uart_to_usb_tb;

	// Inputs
	reg clk;
	reg rst;

	// Outputs
	wire  tx;
	reg	rx;
	
	uart_to_usb_text uut (
		.clk(clk), 
		.rst(rst),
		.rx(rx),
		.tx(tx)
	);
	//初始化
	initial begin
		clk = 0;
		rst = 0;
		// 延迟100ns，进行复位操作
		#100;
		rst = 1;
		rx = 1;//接收数据初始化为高电平，为空闲位
		
		#16000000;		
		rx = 0;//起始位低电平
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 0;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平

		#104140;
		rx = 0;//起始位低电平
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 0;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平
			
			
		#104140;
		rx = 0;//起始位低电平
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 1;
		#104140;
		rx = 0;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平
		
				#104140;
		rx = 1;//起始位低电平
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平
		
				#104140;
		rx = 1;//起始位低电平
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平
		
				#104140;
		rx = 1;//起始位低电平
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;
		#104140;
		rx = 0;
		#104140;
		rx = 0;
		#104140;
		rx = 1;//第八位数据位
		#104140;
		rx = 1;//奇偶校验位
		#104140;
		rx = 1;//停止位高电平
	end
	
	//产生50MHz频率的时钟
	always#10 clk = ~clk;
	
	


	
	
      
endmodule

